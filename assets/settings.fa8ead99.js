import{defineStore as i}from"https://esm.sh/pinia@^2.0.23";import c from"https://esm.sh/js-cookie@^3.0.1";import{C as e,M as o,i as r,u as n}from"./customer.143a0fc3.js";class l{static get(){return c.get(e.TOKEN_NAME)}static verify(){return this.get()===void 0?(alert(o.NOT_LOGGED_ON),!1):!0}static delete(){c.remove(e.TOKEN_NAME)}}class s{static getCurrent(){return r.post(e.ACTIVITY_URL+"/getCurrent")}static apply(){return r.post(e.ACTIVITY_URL+"/apply")}static getCountDown(){return r.post(e.ACTIVITY_URL+"/getCountDown")}static getSeckillUrl(){return r.post(e.ACTIVITY_URL+"/getSeckillUrl")}static seckill(a){return r.post(e.ACTIVITY_URL+"/seckill/"+a)}static getOrder(){return r.post(e.ACTIVITY_URL+"/getOrder")}static pay(a){return r.post(e.ACTIVITY_URL+"/pay","orderId="+a)}}const u=n(),p=i("activity",{state:()=>({activity:{}}),actions:{clearAll(){this.activity={},console.warn("apply: clear store!")},async getCurrent(){if(Object.keys(this.activity).length)return console.log("activity: get from cache!"),{code:200,data:this.activity};const t=await s.getCurrent();return t.code===200&&(this.activity=t.data),t},async apply(){const t=await s.apply();return(t.code===200||t.message===o.APPLY_REPEAT)&&(u.applied=!0,console.log("apply: update cache (customer.applied -> true)")),t},async getCountDown(){return s.getCountDown()},async getSeckillUrl(){return s.getSeckillUrl()},async seckill(t){return s.seckill(t)},async getOrder(){return s.getOrder()},async pay(t){return s.pay(t)}}}),g=p(),y=n(),A=i("settings",{actions:{logout(){g.clearAll(),y.clearAll(),l.delete()}}});export{l as T,A as a,p as u};
